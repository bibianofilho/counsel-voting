// <auto-generated />
using System;
using CounselVoting.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CounselVoting.Infrastructure.Migrations
{
    [DbContext(typeof(CounselContext))]
    partial class CounselContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("CounselVoting.Domain.Model.MeasureModel", b =>
                {
                    b.Property<long>("MeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .HasColumnType("TEXT");

                    b.HasKey("MeasureId");

                    b.ToTable("MeasureModel");
                });

            modelBuilder.Entity("CounselVoting.Domain.Model.MeasureRuleModel", b =>
                {
                    b.Property<long>("MeasureRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("MeasureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinNumberOfVotes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinPercentageOfYes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UserMustUploadPicture")
                        .HasColumnType("INTEGER");

                    b.HasKey("MeasureRuleId");

                    b.HasIndex("MeasureId")
                        .IsUnique();

                    b.ToTable("MeasureRule");
                });

            modelBuilder.Entity("CounselVoting.Domain.Model.SampleModel", b =>
                {
                    b.Property<long>("SampleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SampleId");

                    b.ToTable("Sample");
                });

            modelBuilder.Entity("CounselVoting.Domain.Model.UserNamesMustVoteToPassModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("MeasureRuleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MeasureRuleId");

                    b.ToTable("UserNamesMustVoteToPassModel");
                });

            modelBuilder.Entity("CounselVoting.Domain.Model.VoteModel", b =>
                {
                    b.Property<long>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("MeasureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VoteType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("VotedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("VoteId");

                    b.ToTable("VoteModel");
                });

            modelBuilder.Entity("CounselVoting.Domain.Model.MeasureRuleModel", b =>
                {
                    b.HasOne("CounselVoting.Domain.Model.MeasureModel", "Measure")
                        .WithOne("MeasureRule")
                        .HasForeignKey("CounselVoting.Domain.Model.MeasureRuleModel", "MeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measure");
                });

            modelBuilder.Entity("CounselVoting.Domain.Model.UserNamesMustVoteToPassModel", b =>
                {
                    b.HasOne("CounselVoting.Domain.Model.MeasureRuleModel", "MeasureRule")
                        .WithMany("UserNamesMustVoteToPassList")
                        .HasForeignKey("MeasureRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasureRule");
                });

            modelBuilder.Entity("CounselVoting.Domain.Model.MeasureModel", b =>
                {
                    b.Navigation("MeasureRule");
                });

            modelBuilder.Entity("CounselVoting.Domain.Model.MeasureRuleModel", b =>
                {
                    b.Navigation("UserNamesMustVoteToPassList");
                });
#pragma warning restore 612, 618
        }
    }
}
